import { QueryInterface, DataTypes, Op } from "sequelize"
import { v4 } from "uuid"
import bcrypt from "bcrypt"
import generator from "generate-password"
// local imports
import * as config from "../../../config"

module.exports = {
    up: async (query: QueryInterface) => {
        const t = await query.sequelize.transaction()
        try {
            await query.bulkInsert(
                "role_master",
                [
                    {
                        id: 1,
                        name: "System Administrator",
                        description: "Super user role generated by the system",
                        uuid: v4(),
                        isSystemGenerated: true,
                        isActive: true,
                    },
                    {
                        id: 2,
                        name: "User",
                        description: "Normal user role generated by the system",
                        uuid: v4(),
                        isSystemGenerated: true,
                        isActive: true,
                        createdOn: new Date(),
                        modifiedOn: new Date(),
                    },
                ],
                { transaction: t }
            )
            const l = 56
            const arrPerms = []
            for (let i = 1; i <= l; i++) {
                arrPerms.push({
                    id: i,
                    roleId: 1,
                    permissionId: i,
                    createdOn: new Date(),
                    modifiedOn: new Date(),
                })
            }
            await query.bulkInsert(
                "role_permission",
                [
                    ...arrPerms,
                    {
                        id: 57,
                        roleId: 2,
                        permissionId: 9,
                        createdOn: new Date(),
                        modifiedOn: new Date(),
                    },
                ],
                { transaction: t }
            )
            await query.bulkInsert(
                "user_master",
                [
                    {
                        id: 1,
                        fullName: config.SysAdm.name,
                        uuid: v4(),
                        isActive: true,
                        createdOn: new Date(),
                        modifiedOn: new Date(),
                    },
                ],
                { transaction: t }
            )
            const generatedPassword = generator.generate({
                length: 20,
                lowercase: true,
                uppercase: true,
                numbers: true,
                strict: true,
                symbols: true,
            })
            console.log(`Please keep password safe: ` + generatedPassword)
            await query.bulkInsert(
                "user_login",
                [
                    {
                        id: 1,
                        userId: 1,
                        roleId: 1,
                        email: config.SysAdm.email,
                        passwordHash: bcrypt.hashSync(generatedPassword, 12),
                        createdOn: new Date(),
                        modifiedOn: new Date(),
                    },
                ],
                { transaction: t }
            )
            await query.commitTransaction(t)
        } catch (error) {
            query.rollbackTransaction(t)
            console.log(error)
        }
    },
    down: async (query: QueryInterface) => {
        const t = await query.sequelize.transaction()
        try {
            await query.bulkDelete(
                "user_login",
                {
                    id: {
                        [Op.eq]: 1,
                    },
                },
                { transaction: t }
            )
            await query.bulkDelete(
                "user_master",
                {
                    id: {
                        [Op.eq]: 1,
                    },
                },
                { transaction: t }
            )
            await query.bulkDelete(
                "role_permission",
                {
                    id: {
                        [Op.between]: [1, 57],
                    },
                },
                { transaction: t }
            )
            await query.bulkDelete(
                "role_master",
                {
                    id: {
                        [Op.in]: [1, 2],
                    },
                },
                { transaction: t }
            )
            await query.commitTransaction(t)
        } catch (error) {
            query.rollbackTransaction(t)
            console.log(error)
        }
    },
}
